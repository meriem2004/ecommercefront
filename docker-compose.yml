


networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data:

services:
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=DmRj2003
      - POSTGRES_DB=postgres
    ports:
      - '5433:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init/create-multiple-dbs.sh:/docker-entrypoint-initdb.d/create-multiple-dbs.sh
    networks:
      - microservices-network
    profiles: ["db", "infra", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '256M'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_CLIENT_TRANSPORT_CONNECT_TIMEOUT_MS=8000
      - EUREKA_CLIENT_TRANSPORT_READ_TIMEOUT_MS=8000
      - EUREKA_SERVER_ENABLE_SELF_PRESERVATION=true
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - SERVER_PORT=8761
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
      - SPRING_CLOUD_CONFIG_ENABLED=false
    networks:
      - microservices-network
    profiles: ["infra", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '256M'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 40s

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - EUREKA_CLIENT_ENABLED=true
      - SPRING_CLOUD_CONFIG_SERVER_HEALTH_ENABLED=true
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:/config-repo/,classpath:/config/
      - EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS=30
      - EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS=90
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=config-server
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    networks:
      - microservices-network
    profiles: ["infra", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '192M'
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ./config-repo:/config-repo

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_ENABLED=true
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=api-gateway
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_APPLICATION_NAME=api-gateway
      - SERVER_PORT=8080
      - EUREKA_INSTANCE_INSTANCE_ID=api-gateway:8080
      - JAVA_OPTS=-Xmx192m -Xms96m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    networks:
      - microservices-network
    profiles: ["infra", "all", "gateway"]
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '256M'
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8081:8081"
    networks:
      - microservices-network
    profiles: ["product", "catalog", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '192M'
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/productdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=DmRj2003
      - SPRING_DATASOURCE_HIKARI_MAXIMUM-POOL-SIZE=10
      - SPRING_DATASOURCE_HIKARI_MINIMUM-IDLE=5
      - SPRING_DATASOURCE_HIKARI_CONNECTION-TIMEOUT=30000
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_DATABASE-PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - EUREKA_CLIENT_ENABLED=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SERVER_PORT=8081
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=product-service
      - SPRING_APPLICATION_NAME=product-service
      - EUREKA_INSTANCE_INSTANCE_ID=product-service:8081
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    ports:
      - "8082:8082"
    networks:
      - microservices-network
    profiles: ["shopping", "cart", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '192M'
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cartdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=DmRj2003
      - EUREKA_CLIENT_ENABLED=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=cart-service
      - SPRING_APPLICATION_NAME=cart-service
      - EUREKA_INSTANCE_INSTANCE_ID=cart-service:8082
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8087:8087"
    networks:
      - microservices-network
    profiles: ["notification", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '192M'
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/notificationdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=DmRj2003
      - EUREKA_CLIENT_ENABLED=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=notification-service
      - SPRING_APPLICATION_NAME=notification-service
      - EUREKA_INSTANCE_INSTANCE_ID=notification-service:8087
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8083:8083"
    networks:
      - microservices-network
    profiles: ["order", "shopping", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '192M'
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/orderdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=DmRj2003
      - EUREKA_CLIENT_ENABLED=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=order-service
      - SPRING_APPLICATION_NAME=order-service
      - EUREKA_INSTANCE_INSTANCE_ID=order-service:8083
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8084:8084"
    networks:
      - microservices-network
    profiles: ["payment", "checkout", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '192M'
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/paymentdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=DmRj2003
      - EUREKA_CLIENT_ENABLED=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=payment-service
      - SPRING_APPLICATION_NAME=payment-service
      - EUREKA_INSTANCE_INSTANCE_ID=payment-service:8084
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  shipping-service:
    build:
      context: ./shipping-service
      dockerfile: Dockerfile
    container_name: shipping-service
    ports:
      - "8085:8085"
    networks:
      - microservices-network
    profiles: ["shipping", "checkout", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '192M'
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/shippingdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=DmRj2003
      - EUREKA_CLIENT_ENABLED=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=shipping-service
      - SPRING_APPLICATION_NAME=shipping-service
      - EUREKA_INSTANCE_INSTANCE_ID=shipping-service:8085
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8086:8086"
    networks:
      - microservices-network
    profiles: ["user", "auth", "all"]
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '192M'
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/userdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=DmRj2003
      - EUREKA_CLIENT_ENABLED=true
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=true
      - EUREKA_CLIENT_FETCH_REGISTRY=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_ENABLED=true
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=3000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=user-service
      - SPRING_APPLICATION_NAME=user-service
      - EUREKA_INSTANCE_INSTANCE_ID=user-service:8086
      - JAVA_OPTS=-Xmx128m -Xms64m -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s
# Add to your docker-compose.yml
jenkins:
  image: jenkins/jenkins:lts
  container_name: jenkins
  ports:
    - "8080:8080"
    - "50000:50000"
  volumes:
    - jenkins_data:/var/jenkins_home
    - /var/run/docker.sock:/var/run/docker.sock
  environment:
    - JAVA_OPTS=-Xmx512m
  networks:
    - microservices-network