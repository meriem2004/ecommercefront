services:
  # Infrastructure Services
   postgres:
     image: postgres:14
     container_name: postgres
     ports:
         - "5432:5432"
     environment:
         POSTGRES_USER:
         POSTGRES_PASSWORD:
         POSTGRES_DB: DB_NAME
     volumes:
       - postgres-data:/var/lib/postgresql/data
     networks:
       - microservices-network

   eureka-server:
     build: ./eureka-server
     container_name: eureka-server
     ports:
       - "8761:8761"
     networks:
       - microservices-network
     healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
       interval: 10s
       timeout: 5s
       retries: 5

   config-server:
     build: ./config-server
     container_name: config-server
     ports:
       - "8888:8888"
     networks:
       - microservices-network
     depends_on:
       eureka-server:
         condition: service_healthy
     environment:
       - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/

   api-gateway:
     build: ./api-gateway
     container_name: api-gateway
     ports:
       - "8080:8080"
     networks:
       - microservices-network
     depends_on:
       - config-server
       - eureka-server
     environment:
       - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
       - SPRING_CLOUD_CONFIG_URI=http://config-server:8888

  # Business Services
   product-service:
     build: ./product-service
     container_name: product-service
     ports:
       - "8081:8081"
     networks:
       - microservices-network
     depends_on:
       - postgres
       - config-server
       - eureka-server
     environment:
       - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
       - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
       - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/product_db
       - SPRING_DATASOURCE_USERNAME=postgres
       - SPRING_DATASOURCE_PASSWORD=postgres

  # Add other services as needed
  # user-service:
  # cart-service:
  # order-service:
  # etc.

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data: