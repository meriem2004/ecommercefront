apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f ../docker-compose.yml --profile all
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f ../docker-compose.yml --profile all
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PASSWORD
              value: DmRj2003
            - name: POSTGRES_USER
              value: postgres
          image: postgres:14.1-alpine
          name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: "268435456"
            requests:
              cpu: 300m
              memory: "268435456"
          # FIXED: Updated healthcheck to use proper command format for Alpine PostgreSQL
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/create-multiple-dbs.sh
              name: postgres-cm1
              subPath: create-multiple-dbs.sh
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - configMap:
            defaultMode: 420
            name: postgres-cm1
          name: postgres-cm1